{"version":3,"sources":["components/Phonebook/Phonebook.styled.js","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/Contacts/Contacts.jsx","components/Phonebook/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","components/App/App.jsx","index.js"],"names":["Section","HeadTitle","AddForm","AddFormLabel","FormInput","SubmitBtn","ContactForm","state","name","number","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","onChange","type","pattern","title","required","Component","ContactsList","contacts","filterValue","filteredContacts","filter","toLowerCase","includes","map","id","require","Filter","hendleChange","onFilterChange","Phonebook","info","contact","nanoid","contactList","item","alert","App","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"uRAGO,IAAMA,EAAO,sJAQPC,EAAS,6FAKTC,EAAO,wHAMPC,EAAY,uGAMZC,EAAS,iRAiBTC,EAAS,+S,OC1CTC,EAAb,4MACIC,MAAQ,CACJC,KAAM,GACNC,OAAQ,IAHhB,EAMIC,aAAe,SAAAC,GACX,EAAKC,SAAL,eAAiBD,EAAEE,OAAOL,KAAOG,EAAEE,OAAOC,SAPlD,EAUIC,aAAe,SAACJ,GACZA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKX,OAEzB,EAAKK,SAAS,CACVJ,KAAM,GACNC,OAAQ,MAjBpB,4CAsBI,WAGI,OACI,eAACP,EAAD,CAASgB,SAAUC,KAAKJ,aAAxB,UACI,eAACZ,EAAD,gCAEI,cAACC,EAAD,CACIgB,SAAUD,KAAKT,aACfI,MAAOK,KAAKZ,MAAMC,KAClBa,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGhB,eAACrB,EAAD,wDAEI,cAACC,EAAD,CACIgB,SAAUD,KAAKT,aACfI,MAAOK,KAAKZ,MAAME,OAClBY,KAAK,MACLb,KAAK,SACLc,QAAQ,yFACRC,MAAM,6iBACNC,UAAQ,OAKhB,cAACnB,EAAD,CAAWgB,KAAK,SAAhB,gHArDhB,GAAiCI,aCDpBC,EAAb,4JACI,WACI,IAAMC,EAAWR,KAAKF,MAAMU,SACtBC,EAAcT,KAAKF,MAAMW,YACzBC,EAAmBF,EAASG,QAAO,YACrC,OADmD,EAAXtB,KAC5BuB,cAAcC,SAASJ,MAGvC,OACI,6BAEQC,EAAiBI,KAAI,YAA2B,IAAxBzB,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,OAAQyB,EAAS,EAATA,GACtC,OAAQ,+BAAc1B,EAAd,KAAsBC,IAAbyB,YAZrC,GAFsBC,EAAQ,GAAtBV,WCGKW,EAAb,4MACIC,aAAe,SAAC1B,IAGZ2B,EAFuB,EAAKrB,MAAMqB,gBAEnB3B,EAAEE,OAAOC,QAJhC,4CAOI,WACI,IAAMc,EAAcT,KAAKF,MAAMW,YAE/B,OACI,6KAEI,cAACxB,EAAD,CACAgB,SAAUD,KAAKkB,aACfvB,MAAOc,EACPP,KAAK,OACLb,KAAK,SACLc,QAAQ,yHACRC,MAAM,uCACNC,UAAQ,WApBxB,GAA4BC,aCIfc,EAAb,4MACIhC,MAAQ,CACJoB,SAAU,GACVG,OAAQ,IAHhB,EAMIZ,SAAW,SAACsB,GACR,IAAMC,EAAO,2BAAQD,GAAR,IAAcN,GAAIQ,gBACzBC,EAAc,EAAKpC,MAAMoB,SACVgB,EAAYV,KAAI,SAAAW,GAAU,OAAOA,EAAKpC,QAG1CwB,SAASS,EAAQjC,MAC9BqC,MAAM,qTAIV,EAAKjC,UAAS,WACV,MAAO,CACHe,SAAS,GAAD,mBAAMgB,GAAN,CAAmBF,SAnB3C,EAwBIH,eAAiB,SAACxB,GACd,EAAKF,UAAS,WAEV,MAAO,CACHkB,OAFmBhB,EAAMiB,mBA1BzC,4CAiCI,WACI,MAA6BZ,KAAKZ,MAA1BoB,EAAR,EAAQA,SAAUG,EAAlB,EAAkBA,OAElB,OACI,eAAC9B,EAAD,WACI,cAACC,EAAD,wBACA,cAAC,EAAD,CAAaiB,SAAUC,KAAKD,WAE5B,0CACA,cAAC,EAAD,CAAQU,YAAaE,EAAQQ,eAAgBnB,KAAKmB,iBAClD,cAAC,EAAD,CAAcX,SAAUA,EAAUC,YAAaE,WA3C/D,GAA+BL,aCLxB,SAASqB,IACd,OACE,mCACE,cAAC,EAAD,MCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,cAAc,Y","file":"static/js/main.21835ed3.chunk.js","sourcesContent":["import styled from '@emotion/styled/macro';\nimport { ContactForm } from './ContactForm/ContactForm';\n\nexport const Section = styled.section`\n  width: 900px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const HeadTitle = styled.h1`\n  font-size: 40px;\n  margin: 15px 0;\n`;\n\nexport const AddForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const AddFormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  /* height: 50px; */\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  width: 200px;\n  height: 25px;\n  background-color: rgba(0, 0, 255, 0.1);\n  border: none;\n  color: white;\n\n  &:focus,\n  &:hover {\n    outline: none;\n    background-color: rgba(0, 255, 255, 0.1);\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  margin-top: 5px;\n  width: 150px;\n  height: 25px;\n  background-color: rgba(0, 0, 255, 0.1);\n  border: none;\n  color: white;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    outline: none;\n    background-color: rgba(0, 255, 255, 0.1);\n  }\n\n  &:active {\n    background-color: rgba(0, 0, 255, 0.1);\n  }\n`;\n","import { Component } from \"react\";\nimport { AddForm, FormInput, AddFormLabel, SubmitBtn } from \"../Phonebook.styled\";\n\nexport class ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    };\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value });\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        this.props.onSubmit(this.state);\n\n        this.setState({\n            name: '',\n            number: ''\n        });\n        \n    }\n\n    render() {\n        \n\n        return (\n            <AddForm onSubmit={this.handleSubmit}>\n                <AddFormLabel>\n                    Имя\n                    <FormInput\n                        onChange={this.handleChange}\n                        value={this.state.name}\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                    />\n                </AddFormLabel>\n                <AddFormLabel>\n                    Телефон\n                    <FormInput\n                        onChange={this.handleChange}\n                        value={this.state.number}\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                    />\n\n                </AddFormLabel>\n\n                <SubmitBtn type='submit'>Добавить контакт</SubmitBtn>\n            </AddForm>\n        )\n    }\n};","const { Component } = require(\"react\")\n\nexport class ContactsList extends Component {\n    render() {\n        const contacts = this.props.contacts;\n        const filterValue = this.props.filterValue;\n        const filteredContacts = contacts.filter(({ name }) => {\n            return name.toLowerCase().includes(filterValue)\n        })\n\n        return (\n            <ul>\n                {\n                    filteredContacts.map(({ name, number, id }) => {\n                    return (<li key={id}>{name}: {number}</li>)\n                    })\n                }\n            </ul>\n        )\n    }\n}","import { Component } from \"react\";\nimport { FormInput } from \"../Phonebook.styled\";\n\nexport class Filter extends Component {\n    hendleChange = (e) => {\n        const onFilterChange = this.props.onFilterChange;\n\n        onFilterChange(e.target.value)\n    }\n    \n    render() {\n        const filterValue = this.props.filterValue\n\n        return (\n            <label>\n                Поиск по списку контактов:\n                <FormInput\n                onChange={this.hendleChange}\n                value={filterValue}\n                type=\"text\"\n                name=\"filter\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Фильтр\"\n                required\n            />\n            </label>\n        )\n    };\n}","import { nanoid } from \"nanoid\";\nimport { Component } from \"react\";\nimport { ContactForm } from \"./ContactForm/ContactForm\";\nimport { ContactsList } from \"./Contacts/Contacts\";\nimport { Filter } from \"./Filter/Filter\";\nimport { HeadTitle, Section } from \"./Phonebook.styled\";\n\nexport class Phonebook extends Component {\n    state = {\n        contacts: [],\n        filter: ''\n    }\n\n    onSubmit = (info) => {\n        const contact = { ...info, id: nanoid() };\n        const contactList = this.state.contacts;\n        const contactNames = contactList.map(item => { return item.name });\n\n\n        if (contactNames.includes(contact.name)) {\n            alert('Такое имя уже есть в списке контактов, придумайте новое имя.');\n            return;\n        }\n\n        this.setState(() => {\n            return {\n                contacts: [...contactList, contact]\n            }\n        });\n    };\n\n    onFilterChange = (value) => {\n        this.setState(() => {\n            const normalizeValue = value.toLowerCase()\n            return {\n                filter: normalizeValue\n            }\n        })\n    }\n\n    render() {\n        const { contacts, filter } = this.state;\n\n        return (\n            <Section>\n                <HeadTitle>Phonebook</HeadTitle>\n                <ContactForm onSubmit={this.onSubmit} />\n                \n                <h2>Contacts</h2>\n                <Filter filterValue={filter} onFilterChange={this.onFilterChange}/>\n                <ContactsList contacts={contacts} filterValue={filter}/>\n            </Section>\n        )\n    }\n}","import { Phonebook } from \"components/Phonebook/Phonebook\"; \n\nexport function App() {\n  return (\n    <>\n      <Phonebook/>  \n    </>\n  );\n}\n","import 'index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from 'components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}